program cspence;

/*
 New Tro for the Commodore Spence name instead of CrazySpence
*/

var
	textPointer            : pointer;
	sprite_priority        : pointer;
	m                      : pointer;
	const useKernal        : byte =  0;
    const charsetLocation  : address = $2000;
    charset                : IncBin("cspence/cspence.bin",charsetLocation);
    colors                 : Incbin("cspence/cspence-color.bin",$2800);
    tile_data              : Incbin("cspence/cspence-tiles.bin",$29f9);
    //map_data               : Incbin("cspence/cspence_map.bin",$2998);
    j,k,l,i,o,p,buf,yw,wobbleShift,time,tend,val,scrollVal,reverse: byte;
    letters                : array[7] of integer;

    //spritebar
    @define spriteLoc  $2c00
    sprites                 : incbin("resources/sprites/rastersprite.bin", @spriteLoc);
    posX                    : integer;
    yMin,yMax,reverseSprite : byte;
    //sprite_priority         : pointer;
    sine_wave               : array[256] of byte;
    //Music
    sidfile: incsid("resources/sid/delta_005.sid",2);  
    //Regular classic scroller Pointer
    //The numbers arent in the right place so 0123456789 is "#$%&'()*+
   /* scroller        : cstring = ("                                        ",
                                 "HELLO HAPPY NEW YEAR FROM COMMODORESPENCE I JUST RELEASED SPACE GAME! ON ITCH AND",
                                 " I AM NOW WORKING ON SPACE FIGHT! A & PLAYER VS GAME USING THE PROTOVISION ADAPTE",
                                 "R FIND ME ON BLUESKY COMMODORESPENCE BSKY SOCIAL OR THE EVERYTHING C(& DISCORD ",
                                 "                                      ");
    */
    scroller : cstring = ("                                        ",
                          "HELLO BLUESKY I WOULD LIKE TO TAKE A MOMENT",
                          " TO THANK THIS WEEKS NEW FOLLOWERS      ",
                          "CAT CONTENT DAILY   C STUART HARDWICH   XXJMAE",
                          "   GEOFF TAYLOR   BITLEVEL   WILL CALLAGHAN   EAGLETG",
                          "   BOYCOTT MUSK   ANTONIO FONTAN   MASTERMIND   ",
                          "M LEMONT   SANDRA KATE   DARRO   ALEXANDER TOTAL RELOAD GAME CREATOR   ",
                          "MUGLURK   SCREAMING BRAIN STUDIOS   OLENALAVRENYUK   ",
                          "GREEN PIXEL RETRO LAB   CARLOS BAEZ   DAVE DAVENPORT   ",
                          "SUMIGUCHI   JOHN BRUIN   STEVEN KORVIN   CREED STONEGATE",
                          "   EVERBLIGHT   RETRO VIRTUAL MACHINE   LATEX LEGGINGS   ",
                          "GRACECHARIS   RAMA MUSTAPHA   MOMEN AL MADHOUN   THEO L",
                          "          I APPRECIATE YOUR FOLLOWING TUNE IN NEXT SUNDAY NIGHT",
                          " TO SEE ANOTHER FOLLOWER TRO AND FOLLOW TO SEE YOUR NAME",
                          "                                           ");
@startblock $198f "cspence"    
procedure drawSprite();
procedure PrintText();
procedure UpdateScrollAndText();
  
interrupt RasterMain(); 
begin
//	screen_bg_col:=white;
    StartIRQ(useKernal);
    /* screen_bg_col:=black;
    screen_bg_col:=red; */
    time := time + 1;
    yw:=10; //This gets updated to the current rasterline in the loop, just needs to be something
    wobbleShift:=sine[time*2];
    scrollx(val); //Move the C= a little bit
 //  screen_bg_col:=black;
    waitforraster(150);
    //screen_bg_col:=blue;
    scrolly(0);
    scrollx(0);
    //This makes the bottom wavy
    while yw < 219 do begin
        yw := peek(RASTERLINE_POS, 0);
	    val := sine[yw*8 + wobbleShift]/32;
	    scrollx(val);
	    waitnoraster(1);
    end;
    nop(60);
  /*  screen_bg_col:=black;
    screen_bg_col:=orange; */
     hideborderx(1);
    UpdateScrollAndText();
    scrollx(scrollVal);
    call(sidfile_1_play); //Play SID file
  //  screen_bg_col:=black;
   
    waitforraster(263);
    hideborderx(0);
    scrollx(0);
    drawSprite(); //Draw 'raster' sprite
    closeirq();	 
end;

procedure newprint7x9block(x,y,c:byte);
begin
    m := letters[c];
    for o := 0 to 9 do begin //Y value
        p := o * 7; //Char blocks in this Tro are 7x9
        moveto(x,y,hi(screen_char_loc));
        for i := 0 to 7 do begin
            if (x+i) < 40 then begin //the last letter bleeds over by 1 char this just stops it.
                buf := m[p]; //not transfering the pointed value to a variable causes weird stuff to happen
                screenmemory[i] := buf;
            end;
            inc(p);
        end;
        inc(y);
    end;	
end;

//Scroller Procedures
/*
  The following method just copes the current contents of textPointer to screenmemory
*/

procedure PrintText();
begin
	moveto(0,24,hi(screen_char_loc));
	memcpy(textPointer, 0, screenmemory, tend);
end;

/*
 	The following method decreases the scroll value. If the value is zero, then
 	the scroll value is reset to 7, the text pointer is increased and a new
 	text is printed to the screen. 
*/
procedure UpdateScrollAndText();
begin
	// Scroll has looped 8 pixels
	if (scrollVal=0) then 
	begin
		// Reset scroll value
		scrollVal:=7; 
		// Increase text pointer
		textPointer:= textPointer+1;
		// Reset scroller text if string termination "0" is encountered
		if (textPointer[tend]=0) then dec(tend);
		if tend = 0 then begin 
           textPointer := #scroller;
           tend := 39;
        end;
		// Print new string to the screen
		PrintText();			
	end
	else dec(scrollVal);
end;

procedure drawSprite();
begin
    posX := 30;
    for j:=0 to 8 do begin
        spritepos(posX,(sine_wave[time]+50),j);	
        posX := posX + 48;
    end;
    //Go behind or infront depending on Y value
    if (sine_wave[time]+48) = yMax then begin 
        sprite_priority[0] := %11111111;
        reverseSprite := 1;
    end; 
    if (sine_wave[time]+48) = yMin then begin
        sprite_priority[0] := %00000000;
        reverseSprite := 0;
    end;	
end;

procedure InitSprite();
begin
    sprite_multicolor      :=%11111111;
    sprite_bitmask         :=%11111111;
    sprite_stretch_x       :=$FF;
    sprite_stretch_y       :=$00;
    sprite_multicolor_reg1 :=red;
    sprite_multicolor_reg2 :=light_red;
    sprite_priority[0]     := %00000000;
    for i:=0 to 8 do begin
        sprite_color[i]:=light_grey;
	setspriteloc(i,@spriteLoc/64+i,0);
    end;
end;

procedure InitMap();
begin
	newprint7x9block(7,2,2 );  //Space
    newprint7x9block(12,2,1); //C
    newprint7x9block(19,2,4); //=
    newprint7x9block(0,13,3); //S
    newprint7x9block(7,13,5); //P
    newprint7x9block(14,13,0);//E
    newprint7x9block(21,13,6);//N
    newprint7x9block(28,13,1);//C
    newprint7x9block(35,13,0);//E
end;

procedure InitScreen();
begin
	setbank(vic_bank0);
    //Set Colours
    screen_fg_col:=black;
    screen_bg_col:=black;
    setmulticolormode();
    HideBorderx(0);
    //Charset, this contains the multicolour logos and a limited single colour text font.
    SetCharsetLocation(charsetLocation); 
    clearscreen(" ", screen_char_loc);
    clearscreen(colors[tile_data[1]], screen_col_loc); // all characters use the same colours so we can cheat and just set colour once everywhere
    multicolor_char_col[1]:=purple;
    multicolor_char_col[2]:=blue;  
    moveto(0,21,hi(screen_char_loc));
    fill(screenmemory," ",120);
    moveto(0,22,hi(screen_col_loc));
    fill(screenmemory,yellow,120);     
end;   

procedure InitArray();
begin
    letters[0] := #tile_data;
    letters[1] := #tile_data+63;
    letters[2] := #tile_data+126;
    letters[3] := #tile_data+189;
    letters[4] := #tile_data+252;
    letters[5] := #tile_data+315;
    letters[6] := #tile_data+378;
end;

procedure InitGlobals();
begin
    textPointer     := #scroller; //Scroller text pointer
    tend            := 39;
    scrollVal       := 0;
    val             := 0;	
    reverseSprite   := 0;
    sprite_priority := $d01b;
    yMin            := 48;
    yMax            := 133;
    //generate SINE wave
    for i:=0 to 256 do begin
        sine_wave[i]:=sine[i]/3;	
    end;
    InitArray();
end;

begin
    InitGlobals();
    InitScreen();
    InitMap();
    InitSprite();
    InitSid(sidfile_1_init); //Init SID music
    //Set up interrupt
    preventirq();
    disableciainterrupts();
    SetMemoryConfig(1,@useKernal,0);
    RasterIRQ(RasterMain(),10,useKernal);
    EnableRasterIRQ();
    enableirq();
    Loop();
end.
@endblock
